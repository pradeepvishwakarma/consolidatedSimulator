//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: Operation.proto
// Note: requires additional types generated from: ReferenceData.proto
// Note: requires additional types generated from: EquipmentModel.proto
namespace com.deere.proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"OpEquipmentDataUse")]
  public partial class OpEquipmentDataUse : global::ProtoBuf.IExtensible
  {
    public OpEquipmentDataUse() {}
    

    private uint? _productWorkingDataID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"productWorkingDataID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint productWorkingDataID
    {
      get { return _productWorkingDataID?? default(uint); }
      set { _productWorkingDataID = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool productWorkingDataIDSpecified
    {
      get { return _productWorkingDataID != null; }
      set { if (value == (_productWorkingDataID== null)) _productWorkingDataID = value ? productWorkingDataID : (uint?)null; }
    }
    private bool ShouldSerializeproductWorkingDataID() { return productWorkingDataIDSpecified; }
    private void ResetproductWorkingDataID() { productWorkingDataIDSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<uint> _workingElementID = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(2, Name=@"workingElementID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> workingElementID
    {
      get { return _workingElementID; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"CropInputIDMapEntry")]
  public partial class CropInputIDMapEntry : global::ProtoBuf.IExtensible
  {
    public CropInputIDMapEntry() {}
    

    private string _cropInputERID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"cropInputERID", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string cropInputERID
    {
      get { return _cropInputERID?? ""; }
      set { _cropInputERID = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool cropInputERIDSpecified
    {
      get { return _cropInputERID != null; }
      set { if (value == (_cropInputERID== null)) _cropInputERID = value ? cropInputERID : (string)null; }
    }
    private bool ShouldSerializecropInputERID() { return cropInputERIDSpecified; }
    private void ResetcropInputERID() { cropInputERIDSpecified = false; }
    

    private uint? _cropInputID;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"cropInputID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint cropInputID
    {
      get { return _cropInputID?? default(uint); }
      set { _cropInputID = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool cropInputIDSpecified
    {
      get { return _cropInputID != null; }
      set { if (value == (_cropInputID== null)) _cropInputID = value ? cropInputID : (uint?)null; }
    }
    private bool ShouldSerializecropInputID() { return cropInputIDSpecified; }
    private void ResetcropInputID() { cropInputIDSpecified = false; }
    

    private com.deere.proto.ECropInputType? _cropInputType;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"cropInputType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public com.deere.proto.ECropInputType cropInputType
    {
      get { return _cropInputType?? com.deere.proto.ECropInputType.CIT_Variety; }
      set { _cropInputType = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool cropInputTypeSpecified
    {
      get { return _cropInputType != null; }
      set { if (value == (_cropInputType== null)) _cropInputType = value ? cropInputType : (com.deere.proto.ECropInputType?)null; }
    }
    private bool ShouldSerializecropInputType() { return cropInputTypeSpecified; }
    private void ResetcropInputType() { cropInputTypeSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<uint> _statisticID = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(4, Name=@"statisticID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> statisticID
    {
      get { return _statisticID; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ProductAllocation")]
  public partial class ProductAllocation : global::ProtoBuf.IExtensible
  {
    public ProductAllocation() {}
    

    private uint? _workingFunctionID;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"workingFunctionID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint workingFunctionID
    {
      get { return _workingFunctionID?? default(uint); }
      set { _workingFunctionID = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool workingFunctionIDSpecified
    {
      get { return _workingFunctionID != null; }
      set { if (value == (_workingFunctionID== null)) _workingFunctionID = value ? workingFunctionID : (uint?)null; }
    }
    private bool ShouldSerializeworkingFunctionID() { return workingFunctionIDSpecified; }
    private void ResetworkingFunctionID() { workingFunctionIDSpecified = false; }
    

    private uint? _cropID;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"cropID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint cropID
    {
      get { return _cropID?? default(uint); }
      set { _cropID = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool cropIDSpecified
    {
      get { return _cropID != null; }
      set { if (value == (_cropID== null)) _cropID = value ? cropID : (uint?)null; }
    }
    private bool ShouldSerializecropID() { return cropIDSpecified; }
    private void ResetcropID() { cropIDSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<com.deere.proto.CropInputIDMapEntry> _cropInputIDMap = new global::System.Collections.Generic.List<com.deere.proto.CropInputIDMapEntry>();
    [global::ProtoBuf.ProtoMember(3, Name=@"cropInputIDMap", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<com.deere.proto.CropInputIDMapEntry> cropInputIDMap
    {
      get { return _cropInputIDMap; }
    }
  
    private readonly global::System.Collections.Generic.List<com.deere.proto.OpEquipmentDataUse> _equipmentDataUse = new global::System.Collections.Generic.List<com.deere.proto.OpEquipmentDataUse>();
    [global::ProtoBuf.ProtoMember(4, Name=@"equipmentDataUse", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<com.deere.proto.OpEquipmentDataUse> equipmentDataUse
    {
      get { return _equipmentDataUse; }
    }
  
    private readonly global::System.Collections.Generic.List<uint> _statisticID = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(5, Name=@"statisticID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> statisticID
    {
      get { return _statisticID; }
    }
  

    private com.deere.proto.EWorkingFunctionType? _working_function_type;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"working_function_type", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public com.deere.proto.EWorkingFunctionType working_function_type
    {
      get { return _working_function_type?? com.deere.proto.EWorkingFunctionType.WF_HARVESTING; }
      set { _working_function_type = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool working_function_typeSpecified
    {
      get { return _working_function_type != null; }
      set { if (value == (_working_function_type== null)) _working_function_type = value ? working_function_type : (com.deere.proto.EWorkingFunctionType?)null; }
    }
    private bool ShouldSerializeworking_function_type() { return working_function_typeSpecified; }
    private void Resetworking_function_type() { working_function_typeSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"OperationsContext")]
  public partial class OperationsContext : global::ProtoBuf.IExtensible
  {
    public OperationsContext() {}
    
    private readonly global::System.Collections.Generic.List<com.deere.proto.ProductAllocation> _prodAlloc = new global::System.Collections.Generic.List<com.deere.proto.ProductAllocation>();
    [global::ProtoBuf.ProtoMember(1, Name=@"prodAlloc", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<com.deere.proto.ProductAllocation> prodAlloc
    {
      get { return _prodAlloc; }
    }
  
    private readonly global::System.Collections.Generic.List<uint> _statisticID = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(2, Name=@"statisticID", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> statisticID
    {
      get { return _statisticID; }
    }
  

    private com.deere.proto.CropSeason _cropSeason = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"cropSeason", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public com.deere.proto.CropSeason cropSeason
    {
      get { return _cropSeason; }
      set { _cropSeason = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
    [global::ProtoBuf.ProtoContract(Name=@"ECropInputType")]
    public enum ECropInputType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"CIT_Variety", Value=1)]
      CIT_Variety = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"CIT_Fertilizer", Value=2)]
      CIT_Fertilizer = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"CIT_Chemical", Value=3)]
      CIT_Chemical = 3
    }
  
}