//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: DataEpochTransmitted.proto
// Note: requires additional types generated from: DataEpoch.proto
namespace com.deere.proto
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"ProtoDataEpochTransmitted")]
  public partial class ProtoDataEpochTransmitted : global::ProtoBuf.IExtensible
  {
    public ProtoDataEpochTransmitted() {}
    
    private uint _version;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"version", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint version
    {
      get { return _version; }
      set { _version = value; }
    }
    private string _sessionGuid;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"sessionGuid", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public string sessionGuid
    {
      get { return _sessionGuid; }
      set { _sessionGuid = value; }
    }
    private uint _chunkSeqNum;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"chunkSeqNum", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint chunkSeqNum
    {
      get { return _chunkSeqNum; }
      set { _chunkSeqNum = value; }
    }
    private com.deere.proto.ProtoDataEpoch _protoDataEpoch;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"protoDataEpoch", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public com.deere.proto.ProtoDataEpoch protoDataEpoch
    {
      get { return _protoDataEpoch; }
      set { _protoDataEpoch = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}