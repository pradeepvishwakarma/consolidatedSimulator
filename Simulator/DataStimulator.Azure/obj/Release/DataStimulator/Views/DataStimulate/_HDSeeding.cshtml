@model List<DataStimulator.Models.DataStimulatorModel>   

@* ----------- HD Seeding ---------------------------------------------------*@
 
<div id="accordion2">
        <h3>Root</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0" class="stimulationparameter">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                            </tr>
                        </thead>
                         <tbody>

                @for (var i = 0; i < @Model.Count; i++){
                 if(@Model[i].Type == 1){
                 if (@Model[i].FieldID == 1)
                  {
                    <tr>
                        <td><h4>Num Rows To Plot</h4></td>
                        <td>
                            @if (@Model[i].FieldValue != null){
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                           }
                           else{
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                          @Html.HiddenFor(m => m[i].FieldID)
                          @Html.HiddenFor(m => m[i].Type)
                          @*@Html.HiddenFor(m => m[i].Type, new { Value = "2" })*@
                        </td>
                    </tr>
                  }
                  
                  if (@Model[i].FieldID == 2)
                 {
                    <tr>
                        <td><h4>Machine Width:</h4></td>
                        <td>
                            @if (@Model[i].FieldValue != null){
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                           }
                           else{
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                }
                
                if (@Model[i].FieldID == 3)
                {
                    <tr>
                        <td><h4>Min Time Between Responses:</h4></td>
                        <td>
                            @if (@Model[i].FieldValue != null){
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                           }
                           else{
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                   }
                   
                   if (@Model[i].FieldID == 4)
                   {
                    <tr>
                        <td><h4>Time Between Messages:</h4></td>
                        <td>
                           @if (@Model[i].FieldValue != null){
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                           }
                           else{
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                         @Html.HiddenFor(m => m[i].FieldID)
                         @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                   }
                   
                 if (@Model[i].FieldID == 5)
                 {
                    <tr>
                        <td><h4>Num Messages In Response : </h4></td>
                        <td>
                            @if (@Model[i].FieldValue != null){
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                           }
                           else{
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                         @Html.HiddenFor(m => m[i].FieldID)
                         @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                                }
                               }
                            }
            </tbody>
                    </table>
                </div>
                <h3>Locations</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                        <tbody>
                @for (var i = 0; i < @Model.Count; i++){
                if (@Model[i].Type == 1){
                  if (@Model[i].FieldID == 6){ 
                    <tr>
                       <td><h4>X</h4></td>
                         @if (@Model[i].DataGenerator != null){
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                            }else{
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                    </tr>
                    }
                    
                    if (@Model[i].FieldID == 7){ 
                    <tr>
                        <td><h4>Y</h4></td>
                        @if (@Model[i].DataGenerator != null){
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                            }else{
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                    </tr>
                                }
                                }
                            }
            </tbody>
                    </table>

                </div>
                <h3>Heading</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                        <tbody>
                @for (var i = 0; i < @Model.Count; i++){
                if (@Model[i].Type == 1){
                 if (@Model[i].FieldID == 8){ 
                    <tr>
                       <td><h4>Heading</h4></td>
                         @if (@Model[i].DataGenerator != null){
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                            }else{
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                    </tr>
                                }
                                }
                            }
            </tbody>
                    </table>
                </div>
                <h3>Ag Result</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                         <tbody>
       @for (var i = 0; i < @Model.Count; i++){
         if (@Model[i].Type == 1){
           if (@Model[i].FieldID == 27){ 
        <tr>
            <td><h4>3</h4></td>
            @if (@Model[i].DataGenerator != null){
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                            }else{
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            
            if (@Model[i].FieldID == 28)
            { 
        <tr>
            <td><h4>4</h4></td>
             @if (@Model[i].DataGenerator != null){
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                            }else{
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            }
        }
    </tbody>
                    </table>
                </div>
                <h3>Data Point</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>DisplayIndexID</th>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                         <tbody>
        @for (var i = 0; i < @Model.Count; i++){
         if (@Model[i].Type == 1){
            if (@Model[i].FieldID == 20){ 
        <tr>
            <td><h4>Ground Speed</h4></td>
            @if (@Model[i].DataGenerator != null){
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
                          }else{
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            
            if (@Model[i].FieldID == 21)
            { 
        <tr>
            <td><h4>Downforce Margin</h4></td>
            @if (@Model[i].DataGenerator != null){
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
                          }else{
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            
            if (@Model[i].FieldID == 22)
            { 
        <tr>
            <td><h4>Downforce Applied</h4></td>
             @if (@Model[i].DataGenerator != null){
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
                          }else{
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            if (@Model[i].FieldID == 23)
            { 
        <tr>
            <td><h4>Population</h4></td>
            @if (@Model[i].DataGenerator != null){
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
                          }else{
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            if (@Model[i].FieldID == 24)
            { 
        <tr>
            <td><h4>Singulation</h4></td>
             @if (@Model[i].DataGenerator != null){
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
                          }else{
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            if (@Model[i].FieldID == 25)
            { 
        <tr>
            <td><h4>Seed Space</h4></td>
            @if (@Model[i].DataGenerator != null){
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
                          }else{
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            
            if (@Model[i].FieldID == 26)
            { 
        <tr>
            <td><h4>Ride Quality</h4></td>
             @if (@Model[i].DataGenerator != null){
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
                          }else{
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                          }
            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
            }
            }
        }
    </tbody>
    </table>
    </div>
   </div>
            <input class="button mt2 mb1" type="submit" value="Save" onclick="ShowLoadingImage()" /><img src="~/images/dialog-loader.gif" id="loadingImageHD" class="hide ml10" />
<script type="text/javascript">
    function ShowLoadingImage() {
        $('#loadingImageHD').removeClass('hide');
        $('#loadingImageHD').addClass('show');
    }
</script>