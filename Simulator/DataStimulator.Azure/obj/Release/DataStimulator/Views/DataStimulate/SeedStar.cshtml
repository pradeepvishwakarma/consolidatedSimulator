@model List<DataStimulator.Models.DataStimulatorModel>
@{
    ViewBag.Title = "SeedStar";
}

<script>
    $(function () {
        $("#accordion2").accordion({
            heightStyle: "content",
            collapsible: true,
            active: false
        });
    });
</script>

<div id="tabs-2" class="ui-tabs-panel ui-widget-content ui-corner-bottom" role="tabpanel" aria-expanded="true" aria-hidden="false" style="display: block;">
@using (Html.BeginForm("SeedStar", "DataStimulate", FormMethod.Post, new { @id = "SeedStarForm" }))
{
    <div class="ui-accordion-content ui-widget-content ui-accordion-content-active plotTypePanel" style="display: block;">
          <h3 class="plotType">Plot Type</h3>
            <table cellspacing="0" cellpadding="0" border="0" class="stimulationparameter">
                <thead>
                    <tr>
                        <th>&nbsp;</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @for (var i = 0; i < @Model.Count; i++)
                            {
                                if (@Model[i].FieldID == 29 && @Model[i].Type == 1)
                                {
                                           
                                @Html.RadioButtonFor(m => m[i].FieldValue, 1, @Model[i].FieldValue == 1 ? new { Checked = "checked" } : null)
                                @Html.LabelFor(m => m[i].FieldValue, "Normal")


                                @Html.RadioButtonFor(m => m[i].FieldValue, 2, @Model[i].FieldValue == 2 ? new { Checked = "checked" } : null)
                                @Html.LabelFor(m => m[i].FieldValue, "NShape")

                                @Html.RadioButtonFor(m => m[i].FieldValue, 3, @Model[i].FieldValue == 3 ? new { Checked = "checked" } : null)
                                @Html.LabelFor(m => m[i].FieldValue, "Fit To Farm")
   
                        
                                @Html.HiddenFor(m => m[i].FieldID)
                                    @Html.HiddenFor(m => m[i].Fieldname)
                                @Html.HiddenFor(m => m[i].Type)
                                }
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
   <div id="accordion2">
        <h3>Root</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0" class="stimulationparameter">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                            </tr>
                        </thead>
                         <tbody>

                @for (var i = 0; i < @Model.Count; i++)
                {
                    if (@Model[i].Type == 1)
                    {
                        if (@Model[i].FieldID == 1)
                        {
                    <tr>
                       @* <td><h4>Num Rows To Plot</h4></td>*@
                       @* <td>
                            @if (@Model[i].FieldValue != null)
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            else
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }*@
                          @Html.HiddenFor(m => m[i].FieldID)
                          @Html.HiddenFor(m => m[i].Type)
                        @*</td>*@
                    </tr>
                        }

                        if (@Model[i].FieldID == 2)
                        {
                    <tr>
                        <td><h4>Machine Width:</h4></td>
                        <td>
                            @if (@Model[i].FieldValue != null)
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            else
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                        }

                        if (@Model[i].FieldID == 3)
                        {
                    <tr>
                        <td><h4>Min Time Between Responses:</h4></td>
                        <td>
                            @if (@Model[i].FieldValue != null)
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            else
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                        }

                        if (@Model[i].FieldID == 4)
                        {
                    <tr>
                        <td><h4>Time Between Messages:</h4></td>
                        <td>
                           @if (@Model[i].FieldValue != null)
                           {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                           }
                           else
                           {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                           }
                         @Html.HiddenFor(m => m[i].FieldID)
                         @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                        }

                        if (@Model[i].FieldID == 5)
                        {
                    <tr>
                        <td><h4>Num Messages In Response : </h4></td>
                        <td>
                            @if (@Model[i].FieldValue != null)
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                            else
                            {
                             @Html.TextBoxFor(m => m[i].FieldValue, new { @class = "text w50", Value = "" })
                             @Html.ValidationMessageFor(m => m[i].FieldValue)
                            }
                         @Html.HiddenFor(m => m[i].FieldID)
                         @Html.HiddenFor(m => m[i].Type)
                        </td>
                    </tr>
                        }
                    }
                }
            </tbody>
                    </table>
                </div>
                <h3>Locations</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                        <tbody>
                @for (var i = 0; i < @Model.Count; i++)
                {
                    if (@Model[i].Type == 1)
                    {
                        if (@Model[i].FieldID == 6)
                        { 
                    <tr>
                       <td><h4>X</h4></td>
                         @if (@Model[i].DataGenerator != null)
                         {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                         }
                         else
                         {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                         }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                    </tr>
                        }

                        if (@Model[i].FieldID == 7)
                        { 
                    <tr>
                        <td><h4>Y</h4></td>
                        @if (@Model[i].DataGenerator != null)
                        {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                        }
                        else
                        {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                        }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                    </tr>
                        }
                    }
                }
            </tbody>
                    </table>

                </div>
                <h3>Heading</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                        <tbody>
                @for (var i = 0; i < @Model.Count; i++)
                {
                    if (@Model[i].Type == 1)
                    {
                        if (@Model[i].FieldID == 8)
                        { 
                    <tr>
                       <td><h4>Heading</h4></td>
                         @if (@Model[i].DataGenerator != null)
                         {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                         }
                         else
                         {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
                         }
                            @Html.HiddenFor(m => m[i].FieldID)
                            @Html.HiddenFor(m => m[i].Type)
                    </tr>
                        }
                    }
                }
            </tbody>
                    </table>
                </div>
                <h3>Ag Result</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                         <tbody>
       @for (var i = 0; i < @Model.Count; i++)
       {
           if (@Model[i].Type == 1)
           {
               if (@Model[i].FieldID == 27)
               { 
        <tr>
            <td><h4>3</h4></td>
            @if (@Model[i].DataGenerator != null)
            {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
            }
            else
            {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
            }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
               }

               if (@Model[i].FieldID == 28)
               { 
        <tr>
            <td><h4>4</h4></td>
             @if (@Model[i].DataGenerator != null)
             {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
             }
             else
             {
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
             }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
               }
           }
       }
    </tbody>
                    </table>
                </div>
                <h3>Data Point</h3>
                <div>
                    <table cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                <th>&nbsp;</th>
                                <th>DisplayIndexID</th>
                                <th>Minimum</th>
                                <th>Maximum</th>
                                <th>Step</th>
                                <th>Cycle</th>
                            </tr>
                        </thead>
                         <tbody>
        @for (var i = 0; i < @Model.Count; i++)
        {
            if (@Model[i].Type == 1)
            {
                if (@Model[i].FieldID == 20)
                { 
        <tr>
            <td><h4>Ground Speed</h4></td>
            @if (@Model[i].DataGenerator != null)
            {
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
            }
            else
            {
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
            }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
                }

                if (@Model[i].FieldID == 21)
                { 
        <tr>
            <td><h4>Downforce Margin</h4></td>
            @if (@Model[i].DataGenerator != null)
            {
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
            }
            else
            {
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
            }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
                }

                if (@Model[i].FieldID == 22)
                { 
        <tr>
            <td><h4>Downforce Applied</h4></td>
             @if (@Model[i].DataGenerator != null)
             {
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
             }
             else
             {
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
             }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
                }
                if (@Model[i].FieldID == 23)
                { 
        <tr>
            <td><h4>Population</h4></td>
            @if (@Model[i].DataGenerator != null)
            {
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
            }
            else
            {
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
            }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
                }
                if (@Model[i].FieldID == 24)
                { 
        <tr>
            <td><h4>Singulation</h4></td>
             @if (@Model[i].DataGenerator != null)
             {
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
             }
             else
             {
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
             }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
                }
                if (@Model[i].FieldID == 25)
                { 
        <tr>
            <td><h4>Seed Space</h4></td>
            @if (@Model[i].DataGenerator != null)
            {
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
            }
            else
            {
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
            }

            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
                }

                if (@Model[i].FieldID == 26)
                { 
        <tr>
            <td><h4>Ride Quality</h4></td>
             @if (@Model[i].DataGenerator != null)
             {
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50" })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                        </td>
                        <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50" })<br />
                             @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                        </td>
                        <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50", @checked = @Model[i].DataGenerator.DataPattern.Cycle })<br />
                            @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                        </td>
             }
             else
             {
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID, new { @class = "text w50", Value = "" })<br />
                              @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.DisplayIndexID)
                          </td>   
                          <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MinimumValue, new { @class = "text w50", Value = "" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MinimumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.MaximumValue, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.MaximumValue)
                            </td>
                            <td>@Html.TextBoxFor(m => m[i].DataGenerator.DataPattern.Step, new { @class = "text w50", Value = "" })<br />
                                 @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Step)
                            </td>
                            <td>@Html.CheckBoxFor(m => m[i].DataGenerator.DataPattern.Cycle, new { @class = "text w50" })<br />
                                @Html.ValidationMessageFor(m => m[i].DataGenerator.DataPattern.Cycle)
                            </td>
             }
            @Html.HiddenFor(m => m[i].FieldID)
            @Html.HiddenFor(m => m[i].Type)
        </tr>
                }
            }
        }
    </tbody>
    </table>
    </div>
   </div>
  <input class="button mt2 mb1" type="button" value="Save" onclick="CheckSimulationParameter()" /><img src="~/images/dialog-loader.gif" id="loadingImageHD" class="hide ml10" />
}
<script type="text/javascript">
    function CheckSimulationParameter(e) {
        var isSimulationParameterNull = false;
        $('.stimulationparameter tbody').find("input[type=text]").each(function () {
            if ($(this).val() === '') {
                isSimulationParameterNull = true;

                //e.preventDefault();
            }
        });

        if (isSimulationParameterNull == false) {
            ShowLoadingImage();
        }
        else {
            alert("Please enter values for all elements of Root");
            $("#accordion").accordion({

                active: 0
            });
        }
    }

    function ShowLoadingImage() {
        if ($('#SeedStarForm').valid()) {
            $('#SeedStarForm').submit();
            $('#loadingImageHD').removeClass('hide');
            $('#loadingImageHD').addClass('show');
        }
    }
</script>
</div>
